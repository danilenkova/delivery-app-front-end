{"version":3,"file":"static/js/cart-page.8a380dbe.chunk.js","mappings":"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","sources":["components/OrderForm/OrderForm.styled.jsx","components/OrderForm/OrderForm.jsx","components/ProductsOrder/ProductsOrder.styled.jsx","components/ProductsOrder/ProductsOrder.jsx","components/Cart/Cart.styled.jsx","components/Cart/Cart.jsx","views/CartView.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    width: 430px;\r\n    margin-right: 20px;\r\n  }\r\n  @media screen and (min-width: 1240px) {\r\n    width: 570px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledForm = styled.div``;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const FormField = styled.span`\r\n  width: 100%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  width: 100%;\r\n  height: 40px;\r\n  padding-left: 20px;\r\n  border-radius: 20px;\r\n  border: 0;\r\n  outline: none;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.6), 0px 4px 4px rgba(0, 0, 0, 0.5),\r\n    1px 4px 6px rgba(0, 0, 0, 0.5), inset 0px 1px 1px rgba(0, 0, 0, 0.12),\r\n    inset 0px 4px 4px rgba(0, 0, 0, 0.15), inset 1px 4px 6px rgba(0, 0, 0, 0.16);\r\n`;\r\n","import {\r\n  Wrapper,\r\n  StyledForm,\r\n  FormLabel,\r\n  FormField,\r\n  FormInput,\r\n} from \"./OrderForm.styled\";\r\n\r\nconst OrderForm = (props) => {\r\n  const { name, email, phone, address, handleInputChange } = props;\r\n  return (\r\n    <Wrapper>\r\n      <StyledForm>\r\n        <FormLabel>\r\n          <FormField>Name</FormField>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            placeholder=\"Enter your name\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={name}\r\n            required\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <FormField>Email</FormField>\r\n          <FormInput\r\n            type=\"email\"\r\n            name=\"email\"\r\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n            title=\"Please enter a valid email address\"\r\n            placeholder=\"example@example.com\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={email}\r\n            required\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <FormField>Phone</FormField>\r\n          <FormInput\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            placeholder=\"Enter phone number\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={phone}\r\n            required\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <FormField>Address</FormField>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"address\"\r\n            pattern=\"^[a-zA-Zа-яА-Я0-9]+(([' -][a-zA-Zа-яА-Я0-9 ])?[a-zA-Zа-яА-Я0-9]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\r\n            placeholder=\"Enter your Address\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={address}\r\n            required\r\n          />\r\n        </FormLabel>\r\n      </StyledForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  flex-basis: calc((100%-20px) / 2);\r\n  @media screen and (max-width: 1023px) {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    width: 430px;\r\n  }\r\n  @media screen and (min-width: 1240px) {\r\n    width: 570px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 400px;\r\n  padding: 20px;\r\n  padding-bottom: 0;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    width: 20px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey;\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: red;\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #b30000;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.6), 0px 4px 4px rgba(0, 0, 0, 0.5),\r\n    1px 4px 6px rgba(0, 0, 0, 0.5);\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const ProductImage = styled.div`\r\n  display: block;\r\n  width: 250px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ProductInfo = styled.div`\r\n  width: 230px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ProductName = styled.h2`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ProductPrice = styled.p`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Count = styled.div`\r\n  display: flex;\r\n  width: 150px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const CountButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border-radius: 50%;\r\n  border: none;\r\n  color: #111111;\r\n  :focus,\r\n  :hover {\r\n    background-color: #f46d40;\r\n    color: #f2f2f2;\r\n  }\r\n  :disabled {\r\n    color: #f2f2f2;\r\n  }\r\n`;\r\n\r\nexport const Empty = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  font-size: 24px;\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  AiOutlineCaretLeft,\r\n  AiOutlineCaretRight,\r\n  AiOutlineClose,\r\n} from \"react-icons/ai\";\r\n\r\nimport { cartSelectors, cartActions } from \"../../redux/cart\";\r\n\r\nimport {\r\n  Wrapper,\r\n  List,\r\n  ListItem,\r\n  ProductImage,\r\n  ProductInfo,\r\n  ProductName,\r\n  ProductPrice,\r\n  Count,\r\n  CountButton,\r\n  Empty,\r\n} from \"./ProductsOrder.styled\";\r\n\r\nconst ProductsOrder = () => {\r\n  const cart = useSelector(cartSelectors.getCart);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (type, product) => {\r\n    switch (type) {\r\n      case \"increment\":\r\n        dispatch(\r\n          cartActions.setAmountInCart({\r\n            ...product,\r\n            amount: product.amount + 1,\r\n          })\r\n        );\r\n        break;\r\n      case \"decrement\":\r\n        if (product.amount > 1) {\r\n          dispatch(\r\n            cartActions.setAmountInCart({\r\n              ...product,\r\n              amount: product.amount - 1,\r\n            })\r\n          );\r\n        }\r\n        if (product.amount === 1) {\r\n          return product.amount;\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const deleteProductInCart = (id) => {\r\n    dispatch(cartActions.deleteProductInCart(id));\r\n  };\r\n\r\n  const totalPrice = (product) => (product.price * product.amount).toFixed(2);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {cart.length > 0 ? (\r\n        <List>\r\n          {cart.map((item) => (\r\n            <ListItem key={item._id}>\r\n              <ProductImage>\r\n                <img src={item.image} alt={item.name} />\r\n              </ProductImage>\r\n              <ProductInfo>\r\n                <ProductName>{item.name}</ProductName>\r\n                <ProductPrice>Price: ${item.price}</ProductPrice>\r\n                <Count>\r\n                  <CountButton\r\n                    onClick={() => handleChange(\"decrement\")}\r\n                    disabled={item.amount === 1 ? true : false}\r\n                  >\r\n                    <AiOutlineCaretLeft />\r\n                  </CountButton>\r\n                  <p>{item.amount}</p>\r\n                  <CountButton onClick={() => handleChange(\"increment\")}>\r\n                    <AiOutlineCaretRight />\r\n                  </CountButton>\r\n                  <CountButton\r\n                    type=\"button\"\r\n                    title=\"Delete product\"\r\n                    onClick={() => deleteProductInCart(item._id)}\r\n                  >\r\n                    <AiOutlineClose />\r\n                  </CountButton>\r\n                </Count>\r\n                <p>Total price: ${totalPrice(item)}</p>\r\n              </ProductInfo>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Empty>\r\n          <p>Cart is empty</p>\r\n        </Empty>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProductsOrder;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport const OrderInfo = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const SubmitBlock = styled.div`\r\n  display: flex;\r\n  align-self: flex-end;\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const TotalOfOrder = styled.p`\r\n  margin-right: 20px;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  width: 250px;\r\n  height: 40px;\r\n  padding: 4px;\r\n  margin-top: 15px;\r\n  cursor: pointer;\r\n  border: 0;\r\n  border-radius: 20px;\r\n  background-color: #f46d40;\r\n  color: #ffffff;\r\n  text-shadow: -1px -2px 1px #000;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.6), 0px 4px 4px rgba(0, 0, 0, 0.5),\r\n    1px 4px 6px rgba(0, 0, 0, 0.5);\r\n  transition: text-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :focus,\r\n  :hover {\r\n    text-shadow: 1px 2px 1px #000;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { cartActions, cartSelectors } from \"../../redux/cart\";\r\nimport { ordersOperations } from \"../../redux/orders\";\r\n\r\nimport OrderForm from \"../OrderForm\";\r\nimport ProductsOrder from \"../ProductsOrder\";\r\n\r\nimport {\r\n  Wrapper,\r\n  Form,\r\n  OrderInfo,\r\n  SubmitBlock,\r\n  TotalOfOrder,\r\n  FormButton,\r\n} from \"./Cart.styled\";\r\n\r\nconst Cart = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [total, setTotal] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const productInCart = useSelector(cartSelectors.getCart);\r\n\r\n  useEffect(() => {\r\n    if (productInCart) {\r\n      const totalPrice = productInCart\r\n        .reduce((acc, item) => (acc += Number(item.price) * item.amount), 0)\r\n        .toFixed(2);\r\n      setTotal(totalPrice);\r\n    }\r\n    return;\r\n  }, [productInCart]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"phone\":\r\n        setPhone(value);\r\n        break;\r\n      case \"address\":\r\n        setAddress(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newOrder = {\r\n      user: {\r\n        name,\r\n        email,\r\n        phone,\r\n        address,\r\n      },\r\n      order: { ...productInCart },\r\n      total,\r\n    };\r\n    dispatch(ordersOperations.addOrder({ ...newOrder }));\r\n    toast.success(`Your order has been sent`, {\r\n      pauseOnFocusLoss: false,\r\n      autoClose: 2000,\r\n      pauseOnHover: false,\r\n      theme: \"colored\",\r\n    });\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setAddress(\"\");\r\n    dispatch(cartActions.removeCart());\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form onSubmit={handelSubmit}>\r\n        <OrderInfo>\r\n          <OrderForm\r\n            name={name}\r\n            email={email}\r\n            phone={phone}\r\n            address={address}\r\n            handleInputChange={handleInputChange}\r\n          />\r\n          <ProductsOrder />\r\n        </OrderInfo>\r\n        <SubmitBlock>\r\n          <TotalOfOrder>Total: ${total}</TotalOfOrder>\r\n          <FormButton type=\"submit\">Submit</FormButton>\r\n        </SubmitBlock>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import Cart from \"../components/Cart/Cart\";\r\n\r\nconst CartView = () => {\r\n  return <Cart />;\r\n};\r\n\r\nexport default CartView;\r\n"],"names":["Wrapper","styled","StyledForm","FormLabel","FormField","FormInput","props","name","email","phone","address","handleInputChange","type","pattern","title","placeholder","autoComplete","onChange","value","required","List","ListItem","ProductImage","ProductInfo","ProductName","ProductPrice","Count","CountButton","Empty","cart","useSelector","cartSelectors","dispatch","useDispatch","handleChange","product","cartActions","amount","length","map","item","src","image","alt","price","onClick","disabled","id","_id","toFixed","Form","OrderInfo","SubmitBlock","TotalOfOrder","FormButton","useState","setName","setEmail","setPhone","setAddress","total","setTotal","productInCart","useEffect","totalPrice","reduce","acc","Number","onSubmit","e","preventDefault","newOrder","user","order","ordersOperations","toast","pauseOnFocusLoss","autoClose","pauseOnHover","theme","target"],"sourceRoot":""}